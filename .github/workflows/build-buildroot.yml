name: Build buildroot

on:
  push:
    branches: [ master ]
    paths: [ '.github/workflows/build-buildroot.yml', 'packages' ]
  schedule:
    - cron: 0 22 * * *
  watch:
    types: started

env:
  TZ: Asia/Shanghai


# Action will return to the startup working directory every run
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - uses: actions/checkout@v2

      - name: Initialization environment
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get install sed make binutils build-essential gcc g++ patch gzip \
                                  bzip2 perl cpio unzip rsync file bc wget -y
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"

      - name: Setup build env
        run: |
          sudo mkdir -p /Buildroot-riscv && sudo chmod 777 /Buildroot-riscv
          echo "BD=/Buildroot-riscv" >> $GITHUB_ENV

      - name: Download buildroot stable source
        run: |
          cd ${BD}

          wget https://raw.githubusercontent.com/wbrn/riscv-actions/master/packages
          br_link="$(grep buildroot packages | awk -F '::' '{print $2}')"
          wget $br_link
          br_file="$(basename $br_link)"
          tar xf $br_file

          echo "BR_DIR=${BD}/$(echo $br_file | sed 's/.tar.*//')" >> $GITHUB_ENV

      - name: Building
        run: |
          cd ${BR_DIR}
          make qemu_riscv64_virt_defconfig
          make -j$(nproc)
          make -j$(nproc) sdk 

      - name: Pack
        run: |
          cd ${BR_DIR}/output
          mv images $(basename ${BR_DIR})-output-images
          tar Jcf $(basename ${BR_DIR})-output-images.tar.xz $(basename ${BR_DIR})-output-images
          echo "PACKAGE=$PWD/$(basename ${BR_DIR})-output-images.tar.xz" >> $GITHUB_ENV

      - name: Upload package
        uses: actions/upload-artifact@master
        with:
          name: buildroot output images
          path: ${{env.PACKAGE}}

      #- name: Upload package to cowtransfer
      #  id: cowtransfer
      #  run: |
      #    curl -fsSL git.io/file-transfer | sh
      #    ./transfer cow --block 2621440 -s -p 64 --no-progress ${PACKAGE} 2>&1 | tee cowtransfer.log
      #    echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
      #    echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"

      - name: Generate release tag
        id: tag
        run: |
          echo "::set-output name=release_tag::$(date +"%Y.%m.%d")"
          touch release.txt
          echo "* ${BR_DIR} for Ubuntu$(lsb_release -s -r)" >> release.txt
          echo "::set-output name=status::success"

      - name: Upload package to release
        id: release
        uses: softprops/action-gh-release@v1
        if: steps.tag.outputs.status == 'success' && !cancelled()
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{steps.tag.outputs.release_tag}}
          body_path: release.txt
          files: ${{env.PACKAGE}}
