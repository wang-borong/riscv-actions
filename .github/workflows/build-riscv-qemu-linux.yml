name: Build riscv QEMU and Linux

on:
  push:
    branches: [ master ]
    paths: [ '.github/workflows/build-riscv-qemu-linux.yml', 'packages' ]
  schedule:
    - cron: 0 23 * * *
  watch:
    types: started

env:
  TZ: Asia/Shanghai


# Action will return to the startup working directory every run
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - uses: actions/checkout@v2

      - name: Initialization environment
        run: |
          [[ -f /swapfile ]] && sudo swapoff /swapfile && sudo rm -rf /swapfile
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt install autoconf automake autotools-dev curl libmpc-dev libmpfr-dev libgmp-dev \
                   gawk build-essential bison flex texinfo gperf libtool patchutils bc \
                   zlib1g-dev libexpat-dev git wget ninja-build
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"

      - name: Clone sources
        run: |
          wget https://raw.githubusercontent.com/wbrn/riscv-actions/master/packages
          # download qemu
          qemu_link="$(grep qemu packages | awk -F '::' '{print $2}')"
          wget $qemu_link
          qemu_file="$(basename $qemu_link)"
          echo "QEMU_DIR=$(echo $qemu_file | sed 's/.tar.*//')" >> $GITHUB_ENV
          tar xf $qemu_file
          # download linux
          linux_link="$(grep linux packages | awk -F '::' '{print $2}')"
          wget $linux_link
          linux_file="$(basename $linux_link)"
          echo "LINUX_DIR=$(echo $linux_file | sed 's/.tar.*//')" >> $GITHUB_ENV
          tar xf $linux_file
          # download busybox
          busybox_link="$(grep busybox packages | awk -F '::' '{print $2}')"
          wget $busybox_link
          busybox_file="$(basename $busybox_link)"
          echo "BUSYBOX_DIR=$(echo $busybox_file | sed 's/.tar.*//')" >> $GITHUB_ENV
          tar xf $busybox_file
          # download bootlin toolchain
          tc_link="$(grep bootlin-toolchain packages | awk -F '::' '{print $2}')"
          wget $tc_link
          tc_file="$(basename $tc_link)"
          echo "TC_DIR=$(echo $tc_file | sed 's/.tar.*//')" >> $GITHUB_ENV
          sudo mkdir -p /opt && tar xf $tc_file -C /opt

          echo "PKG_DIR=$QEMU_DIR-$LINUX_DIR-$BUSYBOX_DIR" >> $GITHUB_ENV

      - name: Get bootlin toolchain rootfs skeleton
        run: |
          mkdir ${PKG_DIR}
          mv ${TC_DIR}.tar.* ${PKG_DIR}
          cp -a /opt/${TC_DIR}/riscv64-buildroot-linux-gnu/sysroot ${PKG_DIR}/rootfs-skeleton

      - name: Compile qemu
        run: |
          mkdir -p ${PKG_DIR}/${QEMU_DIR}
          cd ${QEMU_DIR}
          ./configure --prefix=/opt/qemu
          make -j$(nproc) && make install DESTDIR=$PWD/../${PKG_DIR}/${QEMU_DIR}

      - name: Compile riscv linux
        run: |
          cd ${LINUX_DIR}
          export PATH=$PATH:/opt/${TC_DIR}/bin
          make ARCH=riscv CROSS_COMPILE=riscv64-linux- defconfig
          make ARCH=riscv CROSS_COMPILE=riscv64-linux- -j $(nproc)
          cp -a arch/riscv/boot ../${PKG_DIR}/${LINUX_DIR}-boot

      - name: Compile Busybox
        run: |
          cd ${BUSYBOX_DIR}
          export PATH=$PATH:/opt/${TC_DIR}/bin
          CROSS_COMPILE=riscv64-linux- make defconfig
          CROSS_COMPILE=riscv64-linux- make -j $(nproc)
          CROSS_COMPILE=riscv64-linux- make install
          cp -a _install/* ../${PKG_DIR}/rootfs-skeleton

      - name: Pack
        run: |
          tar Jcf ${PKG_DIR}.tar.xz ${PKG_DIR}
          echo "PACKAGE=$PWD/${PKG_DIR}.tar.xz" >> $GITHUB_ENV

      - name: Upload package
        uses: actions/upload-artifact@master
        with:
          name: ${{env.QEMU_DIR}} ${{env.LINUX_DIR}} ${{env.BUSYBOX_DIR}}
          path: ${{env.PACKAGE}}

      #- name: Upload package to cowtransfer
      #  id: cowtransfer
      #  run: |
      #    curl -fsSL git.io/file-transfer | sh
      #    ./transfer cow --block 2621440 -s -p 64 --no-progress ${PACKAGE} 2>&1 | tee cowtransfer.log
      #    echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
      #    echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"

      - name: Generate release tag
        id: tag
        run: |
          echo "::set-output name=release_tag::$(date +"%Y.%m.%d")"
          touch release.txt
          echo "* ${QEMU_DIR} for Ubuntu$(lsb_release -s -r); ${LINUX_DIR} and ${BUSYBOX_DIR} rootfs of riscv64" >> release.txt
          echo "::set-output name=status::success"

      - name: Upload package to release
        id: release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{steps.tag.outputs.release_tag}}
          body_path: release.txt
          files: ${{env.PACKAGE}}
